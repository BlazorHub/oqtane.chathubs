@namespace Mobile.Blazor.Chathubs

@using Oqtane.Shared.Models
@using Microsoft.AspNetCore.SignalR
@using Microsoft.AspNetCore.SignalR.Client;
@using Microsoft.AspNetCore.Http.Connections;

<StackLayout Orientation="StackOrientation.Horizontal">

    <Label Text="@Item.Title" HorizontalOptions="LayoutOptions.FillAndExpand" VerticalOptions="LayoutOptions.CenterAndExpand" />

    <Button Text="Join" OnClick="async () => OnRoomModalOpened()" />

    <Button Text="Leave" OnClick="async () => await LeaveRoom_Clicked(Item.Id)" />

</StackLayout>

<ModalContainer @ref="RoomModalContainer" OnClosed="async () => OnRoomModalClosed()">

    <ContentPage>

        <StackLayout>

            <Label Text="@Item.Title"></Label>

            <MessageItem room="@Item"></MessageItem>

            <StackLayout Orientation="StackOrientation.Horizontal" VerticalOptions="LayoutOptions.EndAndExpand">

                <Entry @bind-Text="Item.MessageInput"
                       Placeholder="Type your message here"
                       OnCompleted="() => ChatHubService.SendMessage(Item.MessageInput, Item.Id, Constants.ModuleId)"
                       IsEnabled="(!isEnabled)"
                       HorizontalOptions="LayoutOptions.FillAndExpand" />

                <Button Text="Send" OnClick="() => ChatHubService.SendMessage(Item.MessageInput, Item.Id, Constants.ModuleId)" />

            </StackLayout>

        </StackLayout>

    </ContentPage>

</ModalContainer>

@code {

    [Inject]
    public ChatHubService ChatHubService { get; set; }

    [Parameter] public ChatHubRoom Item { get; set; }

    bool isEnabled;

    public async Task LeaveRoom_Clicked(int roomId)
    {
        await this.ChatHubService.LeaveChatRoom(roomId);
    }

    public ModalContainer RoomModalContainer { get; set; }

    public async void OnRoomModalOpened()
    {
        RoomModalContainer.ShowDialog();
    }

    public async void OnRoomModalClosed()
    {
        RoomModalContainer.FinishClosingDialog();
    }

}

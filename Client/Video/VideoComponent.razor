@namespace Oqtane.ChatHubs

@using Oqtane.ChatHubs.Services
@using Oqtane.Shared.Models

<style type="text/css">

    .video-item-@ItemIndex {
        line-height: 14px;
    }

    .video-item-resize-container-@ItemIndex {
        width: 320px;
        height: 240px;
        resize: both;
        overflow: hidden;
        background-color: @VideoItemBackgroundColor;
    }

    .video-item-resize-container:hover .video-ellipsis {
        display: initial;
    }

    .video-item-ellipsis {
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
        z-index: 1;
        display: initial;
    }

    .background-gradient-blue {
        background-image: linear-gradient(to bottom, rgba(255,255,255,1), rgba(49,94,182,1));
    }

    .background-gradient-red {
        background-image: linear-gradient(to bottom, rgba(255,255,255,1), rgba(182,94,49,1));
    }

</style>

<div class="bd-highlight video-item-@ItemIndex p-1 @(!ChatHubService.LocalStreamTasks.Any(item => item.Key == ChatHubRoom.Id) && !ChatHubService.RemoteStreamTasks.Any(item => item == ChatHubRoom.Id) ? "d-none" : "d-block")">

    @if (ChatHubService.ConnectedUser.UserId == ChatHubRoom.CreatorId)
    {
        <div>
            <div class="video-item-resize-container-@ItemIndex position-relative">
                <div class="text-white px-2 py-2 mb-0 position-absolute video-item-ellipsis">
                    <small>[loc.] @ChatHubRoom.Title</small>
                </div>
                <video id="chathubs-video-local-@ChatHubRoom.Id" class="chathubs-video-local mb-0 w-100 h-100" controls></video>
                <canvas id="chathubs-canvas-local-@ChatHubRoom.Id" class="chathubs-canvas-local bg-light d-none"></canvas>

                <div class="position-absolute" style="right: 0px; top: 0px;">
                    <div class="input-group my-1">
                        <select id="chathubs-audio-source-local-@ChatHubRoom.Id" style="width: 120px;"></select>
                    </div>
                    <div class="input-group my-1">
                        <select id="chathubs-video-source-local-@ChatHubRoom.Id" style="width: 120px;"></select>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div>
            <div class="video-item-resize-container-@ItemIndex position-relative">
                <div class="text-white px-2 py-2 mb-0 position-absolute video-item-ellipsis">
                    <small>[rem.] @ChatHubRoom.Title</small>
                </div>
                <video id="chathubs-video-remote-@ChatHubRoom.Id" class="chathubs-video-remote mb-0 w-100 h-100" controls></video>
                <canvas id="chathubs-canvas-remote-@ChatHubRoom.Id" class="chathubs-canvas-remote bg-light d-none"></canvas>
            </div>
        </div>
    }

</div>

@code {

    [Inject] public IChatHubService ChatHubService { get; set; }

    [Inject] public VideoService VideoService { get; set; }

    [Parameter] public ChatHubRoom ChatHubRoom { get; set; }

    [Parameter] public int ItemIndex { get; set; }

    private string[] _colors = new string[]
    {
        "BurlyWood",
        "CadetBlue",
        "CornflowerBlue",
        "Coral",
        "DarkKhaki",
        "DarkSalmon",
        "DarkSeaGreen",
        "DarkSlateBlue",
        "DarkSlateGrey",
        "YellowGreen",
        "Chocolate",
        "DarkGoldenRod",
        "DarkCyan",
        "DarkMagenta",
        "DarkRed",
        "MidnightBlue",
        "Orchid",
        "SlateBlue",
        "SandyBrown",
        "SteelBlue",
        "Teal",
    };

    private string _videoItemBackgroundColor { get; set; }

    protected string VideoItemBackgroundColor
    {
        get => this._videoItemBackgroundColor;
        set => this._videoItemBackgroundColor = value;
    }

    protected override void OnInitialized()
    {
        this.VideoItemBackgroundColor = this._colors[new Random().Next(0, this._colors.Count() - 1)];
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender) {
                
            this.VideoService.ContinueLivestreamTask(ChatHubRoom.Id);
        }

        base.OnAfterRender(firstRender);
    }

}
